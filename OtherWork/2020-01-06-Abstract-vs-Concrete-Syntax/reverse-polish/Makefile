# Makefile to build all standalone programs.
#
# A make file consists of a set of rules that tells you how to build
# certain programs. It consists of the following format
#
# target: dependency
#       CMD1
#       CMD2
#       CMD3
#
# For more details https://www.gnu.org/software/make/manual/make.html

# We have two executables that are generated by this make file; ec,
# the expression compiler, and rp, the reverse polish machine. Both of
# these programs depend on the following sml files. So I have defined
# a variable COMMON for this.

COMMON=ast.sml machine.sml


# Default rules for lex and yacc
# ------------------------------
#
# I need rp.lex.sml for rp and expr.lex.sml for the ec program. These
# files are generated from their corresponding .lex file. I could have
# written two different rules for each of these. However, it is
# simpler to write the following default rules.
#
#

%.lex.sml: %.lex
	mllex $<

# The rule above says that all `.lex.sml` files depend on the
# corresponding `.lex and they can be achieved by running mllex on
# them.  This means that if you have foo.lex.sml then its dependency
# is foo.lex and the corresponding update command is mllex foo.lex


# Similarly for the grammar files.
%.grm.sml: %.grm
	mlyacc $<


all: rp ec

# Usually targets are files that you need to create (for example
# rp.lex.sml) however What that means is that the make command will
# refuse to build if such a file exists in the directory. A phony
# target is a target that is built no matter what happens. In this
# case we want all, clean and test to be phony targets.

PHONY: all clean test

clean:
	rm -f *.lex.sml rp
	rm -f *.grm.sml *.grm.desc *.grm.sig ec

rp: rp.lex.sml rp.mlb rp.sml ${COMMON}
	mlton rp.mlb

ec: ec.sml ec.mlb expr.grm.sml expr.lex.sml ${COMMON} translate.sml
	mlton ec.mlb


test: all
	${CURDIR}/rp test.inp
	${CURDIR}/ec test.expr | ${CURDIR}/rp
